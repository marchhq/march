/* Only show placeholder when editor is completely empty */
.ProseMirror p.is-editor-empty:first-child::before {
  color: #616161;
  content: "Start writing...";
  float: left;
  height: 0;
  pointer-events: none;
  opacity: 0.4;
  font-weight: normal;
}

.ProseMirror {
  @apply p-2;
  font-size: 14px;
  font-family: 'Inter', sans-serif;
  font-weight: 400;
}

/* custom tasklist*/
ul[data-type="taskList"] {
  list-style: none;
  padding-left: 0;
}

ul[data-type="taskList"] li {
  display: flex;
  align-items: center;
  margin-bottom: 0.5rem;
}

ul[data-type="taskList"] li > label {
  margin-right: 0.5rem;
  user-select: none;
  display: flex;
  align-items: center;
}

ul[data-type="taskList"] li > div {
  flex: 1;
  display: flex;
  align-items: center;
  min-height: 20px;
  margin-top: -2px;
}

ul[data-type="taskList"] li > label input[type="checkbox"] {
  -webkit-appearance: none;
  appearance: none;
  background-color: hsl(var(--background));
  margin: 0;
  cursor: pointer;
  width: 1rem;
  height: 1rem;
  position: relative;
  border: 1px solid hsl(var(--border));
  border-radius: 100%;
  margin-right: 0.5rem;
  display: grid;
  place-content: center;
  transition: background-color 0.2s, border-color 0.2s;
}

ul[data-type="taskList"] li > label input[type="checkbox"]:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

ul[data-type="taskList"] li > label input[type="checkbox"]:hover {
  border-color: hsl(var(--primary));
}

ul[data-type="taskList"] li > label input[type="checkbox"]:checked {
  background-color: hsl(var(--primary));
  border-color: hsl(var(--primary));
}

ul[data-type="taskList"] li > label input[type="checkbox"]::before {
  content: "";
  width: 0.5rem;
  height: 0.5rem;
  transform: scale(0);
  transition: 120ms transform ease-in-out;
  transform-origin: center;
  background-color: hsl(var(--primary-foreground));
  /* Use a checkmark SVG as mask */
  mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8.5l2.5 2.5l5.5-5.5'/%3E%3C/svg%3E");
  mask-size: contain;
  mask-repeat: no-repeat;
  mask-position: center;
}

ul[data-type="taskList"] li > label input[type="checkbox"]:checked::before {
  transform: scale(1);
}

ul[data-type="taskList"] li[data-checked="true"] > div > p {
  color: hsl(var(--muted-foreground));
  text-decoration: line-through;
  text-decoration-thickness: 1px;
}

/* Overwrite tippy-box original max-width */

.tippy-box {
  max-width: 400px !important;
}

.ProseMirror:not(.dragging) .ProseMirror-selectednode {
  outline: none !important;
  background-color: var(--novel-highlight-blue);
  transition: background-color 0.2s;
  box-shadow: none;
}

.drag-handle {
  position: fixed;
  opacity: 1;
  transition: opacity ease-in 0.2s;
  border-radius: 0.25rem;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 10' style='fill: rgba(0, 0, 0, 0.5)'%3E%3Cpath d='M3,2 C2.44771525,2 2,1.55228475 2,1 C2,0.44771525 2.44771525,0 3,0 C3.55228475,0 4,0.44771525 4,1 C4,1.55228475 3.55228475,2 3,2 Z M3,6 C2.44771525,6 2,5.55228475 2,5 C2,4.44771525 2.44771525,4 3,4 C3.55228475,4 4,4.44771525 4,5 C4,5.55228475 3.55228475,6 3,6 Z M3,10 C2.44771525,10 2,9.55228475 2,9 C2,8.44771525 2.44771525,8 3,8 C3.55228475,8 4,8.44771525 4,9 C4,9.55228475 3.55228475,10 3,10 Z M7,2 C6.44771525,2 6,1.55228475 6,1 C6,0.44771525 6.44771525,0 7,0 C7.55228475,0 8,0.44771525 8,1 C8,1.55228475 7.55228475,2 7,2 Z M7,6 C6.44771525,6 6,5.55228475 6,5 C6,4.44771525 6.44771525,4 7,4 C7.55228475,4 8,4.44771525 8,5 C8,5.55228475 7.55228475,6 7,6 Z M7,10 C6.44771525,10 6,9.55228475 6,9 C6,8.44771525 6.44771525,8 7,8 C7.55228475,8 8,8.44771525 8,9 C8,9.55228475 7.55228475,10 7,10 Z'%3E%3C/path%3E%3C/svg%3E");
  background-size: calc(0.5em + 0.375rem) calc(0.5em + 0.375rem);
  background-repeat: no-repeat;
  background-position: center;
  width: 1rem;
  height: 1rem;
  z-index: 50;
  cursor: grab;
  margin-top: 0.25rem;
  margin-left: 0.2rem;

  &:hover {
    background-color: var(--novel-stone-100);
    transition: background-color 0.2s;
  }

  &:active {
    background-color: var(--novel-stone-200);
    transition: background-color 0.2s;
    cursor: grabbing;
  }

  &.hide {
    opacity: 0;
    pointer-events: none;
  }

  @media screen and (max-width: 600px) {
    display: none;
    pointer-events: none;
  }
}

.dark .drag-handle {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 10' style='fill: rgba(255, 255, 255, 0.5)'%3E%3Cpath d='M3,2 C2.44771525,2 2,1.55228475 2,1 C2,0.44771525 2.44771525,0 3,0 C3.55228475,0 4,0.44771525 4,1 C4,1.55228475 3.55228475,2 3,2 Z M3,6 C2.44771525,6 2,5.55228475 2,5 C2,4.44771525 2.44771525,4 3,4 C3.55228475,4 4,4.44771525 4,5 C4,5.55228475 3.55228475,6 3,6 Z M3,10 C2.44771525,10 2,9.55228475 2,9 C2,8.44771525 2.44771525,8 3,8 C3.55228475,8 4,8.44771525 4,9 C4,9.55228475 3.55228475,10 3,10 Z M7,2 C6.44771525,2 6,1.55228475 6,1 C6,0.44771525 6.44771525,0 7,0 C7.55228475,0 8,0.44771525 8,1 C8,1.55228475 7.55228475,2 7,2 Z M7,6 C6.44771525,6 6,5.55228475 6,5 C6,4.44771525 6.44771525,4 7,4 C7.55228475,4 8,4.44771525 8,5 C8,5.55228475 7.55228475,6 7,6 Z M7,10 C6.44771525,10 6,9.55228475 6,9 C6,8.44771525 6.44771525,8 7,8 C7.55228475,8 8,8.44771525 8,9 C8,9.55228475 7.55228475,10 7,10 Z'%3E%3C/path%3E%3C/svg%3E");
}

/* CSS for bold coloring and highlighting issue*/
span[style] > strong {
  color: inherit;
}

mark[style] > strong {
  color: inherit;
}

/* Add specific heading styles */
.ProseMirror h1 {
  font-size: 1.5rem;  /* text-2xl equivalent */
  font-weight: bold;
  margin-top: 1rem;
  margin-bottom: 0.5rem;
}

.ProseMirror h2 {
  font-size: 1.25rem;  /* text-xl equivalent */
  font-weight: bold;
  margin-top: 0.75rem;
  margin-bottom: 0.5rem;
}

.ProseMirror h3 {
  font-size: 1.125rem;  /* text-lg equivalent */
  font-weight: bold;
  margin-top: 0.75rem;
  margin-bottom: 0.5rem;
}

/*bullet list styling*/
.ProseMirror ul:not([data-type="taskList"]) {
  padding-left: 1.5rem;
  margin: 1rem 0;
}

.ProseMirror ul:not([data-type="taskList"]) li {
  position: relative;
  padding-left: 0.5rem;
  margin-bottom: 0.2rem;
  line-height: 1.6;
}

.ProseMirror ul:not([data-type="taskList"]) li::marker {
  color: hsl(var(--primary));
}

/* Nested unordered lists */
.ProseMirror ul:not([data-type="taskList"]) ul:not([data-type="taskList"]) {
  margin: 0.75rem 0 0.75rem 0.5rem;
}

/* ordered list styling */
.ProseMirror ol {
  padding-left: 1.5rem;
  margin: 1rem 0;
  counter-reset: item;
}

.ProseMirror ol li {
  position: relative;
  padding-left: 0.5rem;
  margin-bottom: 0.2rem;
  line-height: 1.6;
}

.ProseMirror ol li::marker {
  color: hsl(var(--primary));
  font-weight: 500;
}

/* Nested ordered lists */
.ProseMirror ol ol {
  margin: 0.75rem 0 0.75rem 0.5rem;
  list-style-type: lower-alpha;
}

.ProseMirror ol ol ol {
  list-style-type: lower-roman;
}

/*link styling*/
.ProseMirror a {
  color: hsl(var(--primary));
  text-decoration: none;
  font-weight: 500;
  border-bottom: 1px solid hsl(var(--primary) / 0.3);
  transition: color 0.2s, border-color 0.2s, background-color 0.2s;
  padding: 0 0.1rem;
  cursor: pointer;
}

.ProseMirror a:hover {
  color: hsl(var(--primary) / 0.8);
  border-bottom-color: hsl(var(--primary) / 0.8);
  background-color: hsl(var(--primary) / 0.05);
}

.ProseMirror a:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
  border-bottom-color: transparent;
}

.ProseMirror a:active {
  color: hsl(var(--primary) / 0.7);
  background-color: hsl(var(--primary) / 0.1);
}

/* Custom image styles */

.ProseMirror img {
  transition: filter 0.1s ease-in-out;
}
.ProseMirror img:hover {
  cursor: pointer;
  filter: brightness(90%);
}
.ProseMirror img.ProseMirror-selectednode {
  outline: 3px solid #5abbf7;
  filter: brightness(90%);
}

.ProseMirror .img-placeholder {
  position: relative;
}
.ProseMirror .img-placeholder:before {
  content: '';
  box-sizing: border-box;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 36px;
  height: 36px;
  border-radius: 50%;
  border: 3px solid #e2e8f0; /* Replaced novel-stone-200 with a light gray */
  border-top-color: #1e293b; /* Replaced novel-stone-800 with a dark gray/blue */
  animation: spinning 0.6s linear infinite;
}

@keyframes spinning {
  to {
    transform: rotate(360deg);
  }
}